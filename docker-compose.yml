services:
  directus:
    image: directus/directus:latest
    ports:
      - 8055:8055
    environment:
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      DB_CLIENT: ${DIRECTUS_DB_CLIENT}
      DB_HOST: ${DIRECTUS_DB_HOST}
      DB_PORT: ${DIRECTUS_DB_PORT}
      DB_DATABASE: ${DIRECTUS_DB_DATABASE}
      DB_USER: ${DIRECTUS_DB_USER}
      DB_PASSWORD: ${DIRECTUS_DB_PASSWORD}
      WEBSOCKETS_ENABLED: "true"
      KEY: "255d861b-5ea1-5996-9aa3-922530ec40b1"
      SECRET: "6116487b-cda1-52c2-b5b5-c8022c45e263"
    depends_on:
      - db
    env_file:
      - .env
    # Removed healthcheck to simplify

  directus-seeder:
    build: 
      context: .
      dockerfile: docker/seeder.Dockerfile
    restart: "no"  # Changed from 'on-failure' to 'no' so it doesn't restart automatically
    environment:
      DIRECTUS_URL: http://directus:8055
      DIRECTUS_ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      DIRECTUS_ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      SKIP_IF_DATA_EXISTS: "true"  # Added to make sure seeder respects existing data
    depends_on:
      - directus
    env_file:
      - .env
    volumes:
      - ./scripts:/app/scripts
      - ./composables:/app/composables

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - directus_db_data:/var/lib/postgresql/data
    env_file:
      - .env

  web:
    build: .
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
    depends_on:
      - directus
    env_file:
      - .env

volumes:
  directus_db_data:
